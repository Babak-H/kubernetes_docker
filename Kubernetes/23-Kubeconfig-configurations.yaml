# example KubeConfig file
---
apiVersion: v1
kind: Config
# the cotext that we currently have
current-context: prod-user@production
# cluster that we want the user to connect to
clusters:
- name: my-kube-playground
  cluster:
    certificate-authority: /etc/kubernetes/pki/ca.crt
    # or use this
    # certificate-authority-data: ------BEGIN CERTIFICATE...
    server: https://my-kube-playground:6443
# connect the user and cluster together via context
contexts:
- name: my-kube-admin@my-kube-playground  # name such as this can be set in "current-context"
  context:
    cluster: my-kube-playground
    user: my-kube-admin
    namespace: development
# users that want to connect to the API server
users:
- name:  my-kube-admin
  user:
    client-certificate: /etc/kubernetes/pki/users/admin.crt
    client-key: /etc/kubernetes/pki/users/admin.key


# KubeConfig
---
apiVersion: v1
kind: Config
current-context: developers@kubernetes   
###
clusters:
  - name: kubernetes
    cluster: 
      certificate-authority-data: ******
      server: https://controlplane:6443
###
contexts:
  - name: developer 
    context:
      user: martin
      namespace: development  
      cluster: kubernetes 
  - name: kubernetes-admin@kubernetes 
    context:
      user: kubernetes-admin
      cluster: kubernetes 
###
users:
  - name: martin
    user:
      client-key: /root/martin.key  
      client-certificate: /root/martin.crt  
  - name: kubernetes-admin  
    user:
      client-certificate-data: *******
      client-key-data: ********


# change encryption provider
# vi /etc/kubernetes/manifests/kube-apiserver.yaml
# add this line
# - --encryption-provider-config=/etc/kubernetes/enc/encryption.yaml

# kube-apiserver pod
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.31.184.9:6443
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  # to add/remove features from the kubernetes cluster, add them here:
  - command:
    - kube-apiserver
    - --advertise-address=192.31.184.9
    - --allow-privileged=true
    - --authorization-mode=Node,RBAC
    - --client-ca-file=/etc/kubernetes/pki/ca.crt
    - --enable-admission-plugins=NodeRestriction,NamespaceAutoProvision
    - --enable-bootstrap-token-auth=true
    - --disable-admission-plugins=DefaultStorageClass
    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
    - --etcd-servers=https://127.0.0.1:2379
    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
    - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
    - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
    - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --secure-port=6443
    - --service-account-issuer=https://kubernetes.default.svc.cluster.local
    - --service-account-key-file=/etc/kubernetes/pki/sa.pub
    - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
    - --service-cluster-ip-range=10.96.0.0/12
    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
    - --encryption-provider-config=/etc/kubernetes/enc/encryption.yaml
    image: registry.k8s.io/kube-apiserver:v1.30.0
    imagePullPolicy: IfNotPresent
    name: kube-apiserver
