# ClusterIP service
---
apiVersion: v1
kind: Service
metadata:
  # name of this service
  name: back-end
spec:
  # type of service is clusterIP which is only available inside the cluster
  type: ClusterIP
  # chooses the pods that we attach this service too via labels
  selector:
    # the pod should have these two labels
    app: myapp
    type: backend
  ports:
    - targetPort: 80 # port on the pod
      port: 80 # port of this service (other resources connect to this)


# NodePort service
---
apiVersion: v1
kind: Service
metadata:
  name: myapp-service
spec:
  type: NodePort
  selector:
    app: myapp
    type: frontend
  ports:
    - port: 80  # port on service
      targetPort: 80  # port on pod
      # must have a value between 30000 and 32767
      nodePort: 30008  # port on Node (underlying machine that pods run on it)


# LoadBalancer Service
---
apiVersion: v1
kind: Service
metadata:
  name: hello-kube-loadbalancer-service
spec:
  type: LoadBalancer
  selector:
    component: web
  ports:
    - port: 80
      targetPort: 80


# LoadBalancer Service for AWS
---
kind: Service
apiVersion: v1
metadata: 
  name: nginx
  annotations:
    # aws specific: upgrade classic LB to NLB
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    # aws specific: provision private loadbalancer
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  ports:
    - name: web
      port: 80
  selector:
    app: nginx


# clusterIP service for postgres pod
---
apiVersion: apps/v1
kind: Service
metadata:
  name: postgres-clusterip-service
spec:
  type: ClusterIP
  selector:
    component: postgres
  ports:
    - port: 5432
      targetPort: 5432


### Deployment with Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
spec:
  selector:
    matchLabels:
      app: queue
  replicas: 1
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
        - name: queue
          image: richardchesterwood/k8s-fleetman-queue:release2
          resources:
            requests:
              # giving a pod more ram or cpu, does NOT make it run faster
              # this container would need at least 300mb of memory to run properly
              memory: 300Mi
              # value can be "1 core" "0.5 core" "0.1 core" or "100m" meaning "100/1000 core"
              cpu: 100m

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue
spec:
  selector:
    app: queue
  type: NodePort
  ports:
    - name: http
      port: 8161  # when we do not mention targetPort, it means that it is the same as the port on service
      nodePort: 30010


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  selector:
    matchLabels:
      app: webapp
  replicas: 2
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: richardchesterwood/k8s-fleetman-webapp-angular:release2
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp-svc
spec:
  type: NodePort
  selector:
    app: webapp
  ports:
    - name: http
      port: 80
      nodePort: 30080


# kubernetes Service with Multiple Ports
---
apiVersion: v1
kind: Service
metadata:
  name: my-service-multiple
spec:
  selector:
    app: my-app
  # this is the clusterIP of this Service, it can be accessed via this elasticIP
  clusterIP: 10.97.153.249
  externalTrafficPolicy: Cluster
  ports:
    - name: port-1
      nodePort: 32714
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: port-2
      nodePort: 32715
      port: 17176
      protocol: TCP
      targetPort: 17176
