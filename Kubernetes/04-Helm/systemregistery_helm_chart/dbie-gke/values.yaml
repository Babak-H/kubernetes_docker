appName: kubernetes-cluster
namespace: my-namespace
appReplicas: 3
annotations:
 prometheus.io/scrape: "true"
 prometheus.io/port: "5556"
containerNameFirst: prometheus-jmx-exporter
appImageFirst: "address-to-docker-image"
appImageFirstVersion: v1
firstContainerCommands:
- java
- -XX:+UnlockExperimentalVMOptions
- -XshowSettings:vm
- -jar
- jmx_prometheus_httpserver.jar
- '"5556"'
- /etc/jmx-schema-registry/jmx-schema-registry-prometheus.yml
firstImagePort: 5556
appImageSecond: "address-to-docker-image"
appImageSecondVersion: v2
SecondImagePort: 8081
kafka-password: ""
containerEnvVars:
- name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
  value: ""
- name: SCHEMA_REGISTRY_LISTENERS
  value: '"http://0.0.0.0:8081"'
- name: SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL
  value: '"SASL_PLAINTEXT"'
- name: SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM
  value: '"SCRAM-SHA-256"'
- name: SCHEMA_REGISTRY_DEBUG
  value: '"true"'
- name: SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL
  value: INFO
- name: SCHEMA_REGISTRY_INIT_TIMEOUT_MS
  value: '"800000"'
- name: SCHEMA_REGISTRY_JMX_PORT
  value: '"8082"'
- name: SCHEMA_REGISTRY_JMX_ENABLED
  value: '"true"'
- name: SCHEMA_REGISTRY_JMX_OPTS
  value: '"-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=2203"'
volumes:
  - name: jmx-config
    configmapName: schema-registry-jmx-configmap
  - name: schemaregistry-configmap
    configmapName: schema-registry-configmap

servicePort: 8081
containerPort: 8081
serviceType: ClusterIP

virtualService:
  name: ""
  gateway: ""
  host: ""
  destHost: ""
  destHostPort: ""

ingress:
  class: ""
  StaticIpName: ""
  preSharedCert: ""
  allowHttp: ""
  serviceName: ""
  servicePort: ""
