---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dashboard-sa
automountServiceAccountToken: false  # each ServiceAccount has a token


# deployment with custom ServiceAccount
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dashboard
spec:
  replicas: 2
  selector:
    matchLabels:
      name: web-dashboard
  template:
    metadata:
      labels:
        name: web-dashboard
    spec:
      serviceAccountName: dashbaord-sa  ### add the custom serviceAccount in spec.template.spec.serviceAccountName
      containers:
        - image: gcr.io/kodekloud/customimage/my-kubernetes-dashboard
          name: web-dashboard


# create a pod with specific service account
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: nginx
  name: nginx
spec:
  serviceAccountName: myuser # we use pod.spec.serviceAccountName
  containers:
    - name: nginx
      image: nginx

# we have serviceAccount called neptune-sa-v2 in neptune namespace, get the token for this serviceaccount
# the token comes from the secret that belong to the serviceAccount
k -n neptune get sa


K -n neptune get secrets
k -n neptune get secret neptune-secret-1 -o yaml

cat "VALUE-FROM-SECRET-FILE" | base64 -d > /opt/course/5/token


# To add a token to a Kubernetes ServiceAccount, you typically create a Secret that contains the token and then associate it with the ServiceAccount
# Create a Secret with the Token:
# First, you need to create a Kubernetes Secret that contains your token. You can do this by creating a YAML file for the secret or using the kubectl command directly.

---
apiVersion: v1
kind: Secret
metadata:
  name: my-token-secret
type: Opaque
data:
  token: <base64-encoded-token>  # Replace <base64-encoded-token> with your token encoded in base64.  echo -n "your-token" | base64

# or
kubectl create secret generic my-token-secret --from-literal=token=your-token

# Associate the Secret with a ServiceAccount:
# Once you have the secret, you need to associate it with a ServiceAccount. You can do this by modifying the ServiceAccount to reference the secret.

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-service-account
secrets:
  - name: my-token-secret


# Verify the Association:
# You can verify that the secret is associated with the ServiceAccount by describing the ServiceAccount:
kubectl describe serviceaccount my-service-account
# You should see the secret listed under the Mountable secrets or Image pull secrets section, depending on how it's used.
